name: Deploy to AWS ECS Fargate

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1
  AWS_ACCOUNT_ID: 419591513418 
  ECS_CLUSTER_NAME: app-cluster
  ECS_SERVICE_NAME: app-service
  IMAGE_NAME: 419591513418.dkr.ecr.ap-south-1.amazonaws.com/app-reop
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push Docker image to Amazon ECR
        run: |
          aws ecr-public get-login-password --region ap-south-1 | docker login --username AWS --password-stdin public.ecr.aws/y9k2v6d6
          docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} 419591513418.dkr.ecr.ap-south-1.amazonaws.com/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          
      - name: Create new task definition with updated image
        run: |
          
          task_def_arn=$(aws ecs register-task-definition \
          --family app-service \
          --requires-compatibilities FARGATE \
          --network-mode awsvpc \
          --cpu 256 \
          --memory 512 \
          --container-definitions "[{\"name\":\"app\",\"image\":\"${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}\",\"essential\":true,\"memory\":512,\"cpu\":256,\"portMappings\":[{\"containerPort\":3000,\"hostPort\":3000,\"protocol\":\"tcp\"}]}]" \
          --query "taskDefinition.taskDefinitionArn" \
          --output text)
          
          echo "$task_def_arn"
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER_NAME }} --service ${{ env.ECS_SERVICE_NAME }} --force-new-deployment --task-definition "$task_def_arn"
d
